plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.fastcampus.mapper'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.batch:spring-batch-integration' // AsyncItemProcessor, AsyncItemWriter
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    /* lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* DB 관련 */
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    /* mapstruct */
    implementation 'org.mapstruct:mapstruct:1.5.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'

    // hibernate-types
    implementation 'com.vladmihalcea:hibernate-types-52:2.19.2'

    /* test */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'

    /* test lombok */
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    /* https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 */
    testImplementation 'org.apache.commons:commons-lang3:3.12.0'

    /* Junit5 */
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    /* ----- Querydsl 설정 ----- */
    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //Querydsl 설정부
    def generated = 'src/main/generated'

    //querydsl QClass 파일 생성 위치를 지정
    tasks.withType(JavaCompile) {
        options.getGeneratedSourceOutputDirectory().set(file(generated))
    }

    //java source set 에 querydsl QClass 위치 추가
    sourceSets {
        main.java.srcDirs += [ generated ]
    }

    //gradle clean 시 QClass 디렉토리 삭제
    clean {
        delete file(generated)
    }

    /* ----- Querydsl 설정 ----- */

}

tasks.named('test') {
    useJUnitPlatform()
}
